{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","login","user","checkingFinish","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPasswordRepeat","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOneHour","clone","initEvent","tittle","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.083627e8.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchWithToken,\r\n    fetchWithoutToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventSetActive: '[event] Set active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import moment from \"moment\"\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map((e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate()\r\n    }));\r\n}","import { types } from '../types/types';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const response = await fetchWithToken('events', event, 'POST');\r\n            const body = response.json();\r\n    \r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch(eventAddNew(event));\r\n            }   \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst  eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const  eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const response = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const response = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const response = await fetchWithToken('events');\r\n            const body = await response.json();\r\n            const events = prepareEvents(body.events);\r\n\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout});\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})","import Swal from 'sweetalert2';\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLoging = (email, password) => {\r\n    return async(dispatch) => {\r\n        const response = await fetchWithoutToken('auth', {email, password}, 'POST');\r\n        const body = await response.json();\r\n        \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n        const response = await fetchWithoutToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await response.json();\r\n        \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const response = await fetchWithToken('auth/renew');\r\n        const body = await response.json();\r\n        \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nconst logout = () => ({type: types.authLogout});","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLoging, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        loginEmail: 'mauricio@gmail.com',\r\n        loginPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        registerName: 'Tiziano',\r\n        registerEmail: 'tiziano@gmail.com',\r\n        registerPassword: '123456',\r\n        registerPasswordRepeat: '123456'\r\n    });\r\n\r\n    const {loginEmail, loginPassword} = formLoginValues;\r\n    const {registerName, registerEmail, registerPassword, registerPasswordRepeat} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoging(loginEmail, loginPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (registerPassword !== registerPasswordRepeat) {\r\n            return Swal.fire('Error', 'Password mismatch', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(registerEmail, registerPassword, registerName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Log in</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"loginEmail\"\r\n                                value={loginEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"password\"\r\n                                name=\"loginPassword\"\r\n                                value={loginPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Sign in</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name=\"registerName\"\r\n                                value={registerName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"registerEmail\"\r\n                                value={registerEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"registerPassword\"\r\n                                value={registerPassword}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password again\"\r\n                                name=\"registerPasswordRepeat\"\r\n                                value={registerPasswordRepeat}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Create account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar  navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button\r\n                onClick={handleLogout}\r\n                className=\"btn btn-outline-danger\"\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\" />\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    );\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOneHour = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    tittle: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlusOneHour.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlusOneHour.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndtDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'End date must be after Start date', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-background\"\r\n        >\r\n            <h1>{(activeEvent) ? 'Edit Event' : 'New Event'}</h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Start date</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart ? dateStart : null}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>End date</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndtDateChange}\r\n                        minDate={dateStart}\r\n                        value={dateEnd ? dateEnd : null}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Title and Notes</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Event title\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">A short description</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notes\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Other information</small>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Save</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Delete Event</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/login\" />)\n            )}\n\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Redirect to=\"/\" />)\n                    : (<Component {...props} />)\n            )}\n\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return (<h5>Wait...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Birthday of my commit',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#FAFAFA',\r\n//     notes: 'Trying to be better',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Mauricio'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}